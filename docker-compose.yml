version: "3"
services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/code

# We first use Dockerfile to build an image and develop layered conteiners
# while waiting for resources to develop using docker-compose.yml file.
# The new volumes key mounts the project directory (current directory) on the
# host to /code inside the container, allowing you to modify the code on the
# fly, without having to rebuild the image
# https://medium.com/statuscode/dockerising-a-node-js-and-mongodb-app-d22047e2806f
#    container_name: personadb
    # pull the image from registry -> use local image personadb:latest
#    image: personadb:latest
#    volumes:
#      - /tmp/personadb
#    deploy:
#      replicas: 2
#      resources:
#        limits:
#          cpus: "0.1"
#          memory: 50M
#      restart_policy:
#        condition: on-failure
    # share port 8080 via a load-balanced network called webnet
#    ports:
#      - "8080:8080"
#    networks:
#      - webnet
# use default webnet settings (which is a load-balanced overlay network)
#networks:
#  webnet:

